==================================================
使い方
==================================================

| 本説明による最終的なディレクトリ構造は下図のようになる。
| 最初、\ **root**\ フォルダには\ **src**\ フォルダのみ置いてある。

.. image:: dir_docstring.png
   :scale: 100


ドキュメントセットの生成
==================================================
\ **root**\ で以下のコマンドを打つ。

::

    >sphinx-apidoc -F -o ./docs ./src

.. _sphinx-apidocコマンド: https://www.sphinx-doc.org/ja/stable/man/sphinx-apidoc.html

    | \ ``>sphinx-apidoc -F -o {sphinxソースフォルダ} {ソースコードフォルダ}``\
    | ※\ `sphinx-apidocコマンド`_\ はSphinxで使用するソースを自動生成するツール。
    | ※-Fオプションはsphinx-quickstartと同じ処理
    | 　ただし、ディレクトリ構造がsphinx-quickstartコマンドの時と異なる？

すると上図の様にdocsフォルダとファイル群が生成される。


conf.pyの設定
==================================================
| docstringをsphinxで表示するためにはconf.pyの設定を幾つか追加する必要がある。
| 詳細は\ `ビルド設定ファイル(conf.py) <https://www.sphinx-doc.org/ja/stable/config.html>`_\ を参照。

**[設定1] 以下の箇所のコメントアウトを解除し絶対パスを設定する**

::

    import os
    import sys
    sys.path.insert(0, os.path.abspath('../src'))

    ※abspathにはconf.pyから見たソースファイルのディレクトリを指定すればよい。

**[設定2] 拡張機能の追加**

extensionsに追加したい機能を設定する。

(1) sphinx.ext.autodocが設定されているか確認

    | デフォルトでは追加されているはずだが、無ければ追加する。
    | sphinx.ext.autodocはdocstringで書かれているモジュールを読み込み、
    | 自動的に取り込む機能。

(2) sphinx.ext.napoleonを追加

    docstringにgoogleスタイルやnumpyスタイルを使用する場合に設定する。


htmlの生成
==================================================
| 出力先の違いで2種類紹介する。
| `sphinx-buildコマンドのオプションはここ <https://www.sphinx-doc.org/ja/stable/man/sphinx-build.html>`_

**[方法1]** make htmlコマンド (出力先固定)

    | \ **src**\ ディレクトリで以下のコマンドを打つ。
    | 出力先は上図の\ **_build**\ フォルダ内に生成されるhtmlフォルダ。

::

    >make html

    ※make htmlコマンドは Makefile と make.bat があるディレクトリで実行する必要がある。


**[方法2]** sphinx-buildコマンド (出力先指定)

    | \ **root**\ フォルダで以下のコマンドを打つ。
    | 出力先は上図の\ **html**\ フォルダ。

::

    >sphinx-build -a ./docs ./html

    ※ここではsphinx-build -a {sphinxソースフォルダ} {出力先フォルダ}


参考(conf.py)
==================================================
本ドキュメントのconfの設定は以下のようになっている。

::

    # Configuration file for the Sphinx documentation builder.
    #
    # This file only contains a selection of the most common options. For a full
    # list see the documentation:
    # https://www.sphinx-doc.org/en/master/usage/configuration.html

    # -- Path setup --------------------------------------------------------------

    # If extensions (or modules to document with autodoc) are in another directory,
    # add these directories to sys.path here. If the directory is relative to the
    # documentation root, use os.path.abspath to make it absolute, like shown here.
    #
    import os
    import sys
    sys.path.insert(0, os.path.abspath('../src'))


    # -- Project information -----------------------------------------------------

    project = 'src'
    copyright = '2020, Author'
    author = 'Author'


    # -- General configuration ---------------------------------------------------

    # Add any Sphinx extension module names here, as strings. They can be
    # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
    # ones.
    extensions = [
        'sphinx.ext.autodoc',
        'sphinx.ext.viewcode',
        'sphinx.ext.todo',
        'sphinx.ext.napoleon',
    ]

    # Add any paths that contain templates here, relative to this directory.
    templates_path = ['_templates']

    # The language for content autogenerated by Sphinx. Refer to documentation
    # for a list of supported languages.
    #
    # This is also used if you do content translation via gettext catalogs.
    # Usually you set "language" from the command line for these cases.
    language = 'ja'

    # List of patterns, relative to source directory, that match files and
    # directories to ignore when looking for source files.
    # This pattern also affects html_static_path and html_extra_path.
    exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']


    # -- Options for HTML output -------------------------------------------------

    # The theme to use for HTML and HTML Help pages.  See the documentation for
    # a list of builtin themes.
    #
    html_theme = 'sphinx_rtd_theme'

    # Add any paths that contain custom static files (such as style sheets) here,
    # relative to this directory. They are copied after the builtin static files,
    # so a file named "default.css" will overwrite the builtin "default.css".
    html_static_path = ['_static']


    # -- Extension configuration -------------------------------------------------

    # -- Options for todo extension ----------------------------------------------

    # If true, `todo` and `todoList` produce output, else they produce nothing.
    todo_include_todos = True
